/******************************************************************************
 *
 * Module: Ultra Sonic
 *
 * File Name: ultra_sonic.c
 *
 * Description: Ultra sonic driver
 *
 * Author: Abdelrahman Maher
 *
 ******************************************************************************/

#include "ultra_sonic.h"
#include "icu.h"
#include "gpio.h"
#include "util/delay.h"
#include "avr/io.h"

uint8 g_edgeCount = 0;
uint16 g_timeHigh = 0;
uint16 g_timePeriod = 0;
uint16 g_timePeriodPlusHigh = 0;

void Ultrasonic_init(void)
{
	Icu_ConfigType Icu_Config = {F_CPU_8,RISING};

	Icu_init (&Icu_Config);
	Icu_setCallBack(Ultrasonic_edgeProcessing);

	GPIO_setupPinDirection(TRIGGER_PORT_ID, TRIGGER_PIN_ID, PIN_OUTPUT);
}

void Ultrasonic_Trigger(void)
{
	GPIO_writePin(TRIGGER_PORT_ID, TRIGGER_PIN_ID, LOGIC_HIGH);
	_delay_us(10);
	GPIO_writePin(TRIGGER_PORT_ID, TRIGGER_PIN_ID, LOGIC_LOW);
}

uint16 Ultrasonic_readDistance(void)
{
	Ultrasonic_Trigger();

	uint16 distance = 0;

	if(g_edgeCount == 4)
	{
		Icu_DeInit();
		g_edgeCount = 0;
		distance = (uint16)(g_timePeriodPlusHigh - g_timePeriod) / 58;
	}

	return distance;
}

void Ultrasonic_edgeProcessing(void)
{
	g_edgeCount++;

	if(g_edgeCount == 1)
	{
		Icu_clearTimerValue();
		Icu_setEdgeDetectionType(FALLING);
	}
	else if(g_edgeCount == 2)
	{
		g_timeHigh = Icu_getInputCaptureValue();
		Icu_setEdgeDetectionType(RISING);
	}
	else if(g_edgeCount == 3)
	{
		g_timePeriod = Icu_getInputCaptureValue();
		Icu_setEdgeDetectionType(FALLING);
	}
	else if(g_edgeCount == 4)
	{
		g_timePeriodPlusHigh = Icu_getInputCaptureValue();
		Icu_clearTimerValue();
		Icu_setEdgeDetectionType(RISING);
	}
}


